---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
    image:
      repository: docker.io/jellyfin/jellyfin
      tag: "10.11"
    env:
      TZ: Europe/Berlin

    service:
      main:
        enabled: true
        ports:
          http:
            port: 8096
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "television-box"
          hajimari.io/group: "Media"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          external-dns.home.arpa/enabled: "true"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
            #traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri "jelly.${SECRET_DEV_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: 8096
        tls:
          - hosts:
              - *uri
            secretName: *uri
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups: [44, 109, 10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: local-path
        labels:
          snapshot.home.arpa/enabled: "true"
    persistence:
      media:
        enabled: true
        mountPropagation: HostToContainer
        existingClaim: media
        globalMounts:
          - path: /mnt/media
      media-smb:
        enabled: true
        mountPropagation: HostToContainer
        existingClaim: media-library-pvc
        globalMounts:
          - path: /mnt/media-smb

    nodeSelector:
      node-role.kubernetes.io/worker: "true"
      intel.feature.node.kubernetes.io/gpu: "true"
    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 100m
        memory: 1000Mi
      limits:
        gpu.intel.com/i915: 1
        memory: 6000Mi
