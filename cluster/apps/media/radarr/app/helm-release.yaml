apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &appname radarr
  namespace: media
spec:
  releaseName: *appname
  chart:
    spec:
      chart: *appname
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
  interval: 4m
  values:
    podLabels:
      app: *appname
    podSecurityContext:
      fsGroup: 568
      runAsUser: 0

    image:
      repository: ghcr.io/home-operations/radarr
      tag: 5.22.0.9808
      pullPolicy: Always
    
    # -- environment variables.
    # @default -- See below
    env:
      # -- Set the container timezone
      TZ: "${TIMEZONE}"
    
    # -- Configures service settings for the chart.
    # @default -- See values.yaml
    service:
      main:
        ports:
          http:
            port: 7878
        type: ClusterIP
    
    persistence:
      config:
        enabled: true
        existingClaim: "radarr-config-volume"
    
      downloads:
        enabled: true
        mountPropagation: HostToContainer
        existingClaim: downloads-mergerfs
        globalMounts:
          - path: /mnt/downloads
      media:
        enabled: true
        existingClaim: media
        globalMounts:
          - path: /mnt/media
      media-2:
        enabled: true
        mountPropagation: HostToContainer
        existingClaim: media-library-pvc
        globalMounts:
          - path: /mnt/media-smb


    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "filmstrip"
          hajimari.io/group: "Media"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          external-dns.home.arpa/enabled: "true"
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authentik@kubernetescrd


        hosts:
          - host: &uri "radarr.${SECRET_DEV_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *uri
            secretName: *uri
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
